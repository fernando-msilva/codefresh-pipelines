version: '1.0'

stages:
  - 'clone'
  - 'build'
  - 'push'
  - 'deploy'

steps:
  clear:
    stage: 'clone'
    title: 'Cleanup previous clone'
    image: alpine/git:latest
    commands:
      - rm -rf ${{CF_REPO_NAME}}

  clone:
    stage: 'clone'
    type: 'git-clone'
    title: 'Cloning'
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    git: fernando-msilva

  lint:
    title: 'Lint Dockerfile'
    stage: 'build'
    type: freestyle
    image: hadolint/hadolint
    commands:
      - < ${{CF_REPO_NAME}}/cloud-run-golang/Dockerfile | tee

  build:
    title: 'Building image'
    type: 'build'
    image_name: 'golang-api'
    tag: '${{CF_SHORT_REVISION}}'
    disable_push: true
    stage: 'build'
    working_directory: "${{CF_REPO_NAME}}/cloud-run-golang"

  push:
    stage: 'push'
    type: 'push'
    registry: 'golang-api'
    candidate: '${{build}}'
    tag: '${{CF_SHORT_REVISION}}'

  deploy:
    stage: 'deploy'
    title: 'Deploying new revision'
    type: freestyle
    image: google/cloud-sdk:alpine
    commands:
      - echo '${{GOOGLE_CREDENTIALS}}' > credential.json
      - gcloud auth activate-service-account --key-file credential.json
      - gcloud run deploy golang-api --platform ${{CLOUD_RUN_PLATFORM}} --project ${{PROJECT_ID}} --image gcr.io/${{PROJECT_ID}}/golang-api:${{CF_SHORT_REVISION}} --region ${{CLOUD_RUN_REGION}} --allow-unauthenticated